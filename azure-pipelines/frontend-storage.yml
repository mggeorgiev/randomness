# .NET Core Function App to Windows on Azure
# Build a .NET Core function app and deploy it to Azure as a Windows function App.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/dotnet-core

trigger: 
  branches:
      include:
      - master
  paths:
    include:
    - frontend/ 

# parameters:
# - name: AZURE_STORAGE_KEY
#   type: string

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'corp-fujitsu-multicloud-lu-masd-001'
  AZURE_STORAGE_ACCOUNT: 'randomtsteus1pba279f16'
  container: '$web'

  # Web app name
  webAppName: 'app-randomweb-eus1-p-701'

  # Agent VM image name
  vmImageName: 'windows-2019'

  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)/frontend'

stages:
- stage: Build
  displayName: Build stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    # - task: AzureKeyVault@1
    #   inputs:
    #     azureSubscription: '$(azureSubscription)'            ## YOUR_SERVICE_CONNECTION_NAME
    #     KeyVaultName: 'kvt-bloodPreassure-002'               ## YOUR_KEY_VAULT_NAME
    #     SecretsFilter: 'AZURE_STORAGE_KEY'                   ## YOUR_SECRET_NAME. Default value: *
    #     RunAsPreJob: false 
    - task: UseDotNet@2
      inputs:
        version: '6.0.x'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: |
          $(workingDirectory)/*.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release

    # Publish projects to specified folder.
    - task: DotNetCoreCLI@2
      displayName: 'dotnet publish'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '$(workingDirectory)/*.csproj'
        arguments: '--output $(Build.ArtifactStagingDirectory)/app/publish --configuration Release'
        zipAfterPublish: false
        modifyOutputPath: true

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()

  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'development'
    pool:
      vmImage: $(vmImageName)

    strategy:
      runOnce:
        deploy:
          steps:
          # - task: AzureFileCopy@4
          #   displayName: 'Azure storage static deploy'
          #   inputs:
          #     SourcePath: '$(System.DefaultWorkingDirectory)/publish_output'
          #     azureSubscription: '$(azureSubscription)'
          #     Destination: 'AzureBlob'
          #     storage: 'randomtsteus1pba279f16'
          #     ContainerName: '$web'
          - task: AzureCLI@2
            displayName: Azure CLI
            inputs:
              azureSubscription: '$(azureSubscription)'
              scriptType: ps
              scriptLocation: inlineScript
              inlineScript: |
                az --version
                az account show

          - task: AzureCLI@2
            displayName: Purge files from the storage container
            inputs:
              azureSubscription: '$(azureSubscription)'
              scriptType: 'ps'
              scriptLocation: 'inlineScript'
              arguments: '$(AZURE_STORAGE_ACCOUNT) $(AZURE_STORAGE_KEY) $(container)'
              inlineScript: 'az storage blob delete-batch --account-name $1 --account-key $2 -s $3'