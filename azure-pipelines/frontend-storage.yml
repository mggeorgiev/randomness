# .NET Core Function App to Windows on Azure
# Build a .NET Core function app and deploy it to Azure as a Windows function App.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/en-us/azure/devops/pipelines/languages/dotnet-core

trigger: 
  branches:
      include:
      - master
  paths:
    include:
    - frontend/ 

# parameters:
# - name: AZURE_STORAGE_KEY
#   type: string

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: 'corp-fujitsu-multicloud-lu-masd-001'
  container: '$web'

  # Web app name
  webAppName: 'app-randomweb-eus1-p-701'

  # Agent VM image name
  vmImageName: 'windows-2019'

  # Working Directory
  workingDirectory: '$(System.DefaultWorkingDirectory)/frontend'

stages:
- stage: Build
  displayName: Build and Deploy stage

  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)

    steps:
    # - task: AzureKeyVault@1
    #   inputs:
    #     azureSubscription: '$(azureSubscription)'            ## YOUR_SERVICE_CONNECTION_NAME
    #     KeyVaultName: 'kvt-bloodPreassure-002'               ## YOUR_KEY_VAULT_NAME
    #     SecretsFilter: 'AZURE_STORAGE_KEY'                   ## YOUR_SECRET_NAME. Default value: *
    #     RunAsPreJob: false 
    - task: UseDotNet@2
      displayName: 'Install dotnet 6.0.x'    
      inputs:
        version: '6.0.x'

    - task: DotNetCoreCLI@2
      displayName: 'Build (dotnet build)'
      inputs:
        command: 'build'
        projects: |
          $(workingDirectory)/*.csproj
        arguments: --output $(System.DefaultWorkingDirectory)/publish_output --configuration Release

    # Publish projects to specified folder.
    - task: DotNetCoreCLI@2
      displayName: 'Publish (dotnet publish)'
      inputs:
        command: 'publish'
        publishWebProjects: false
        projects: '$(workingDirectory)/*.csproj'
        arguments: '--output $(Build.ArtifactStagingDirectory)/app/publish --configuration Release'
        zipAfterPublish: false
        modifyOutputPath: true

    - task: FileTransform@1
      inputs:
        folderPath: '$(Build.ArtifactStagingDirectory)\app\publish\frontend\wwwroot\'
        fileType: 'json'
        targetFiles: 'functions_config.json'

    - task: AzureCLI@2
      displayName: Purge files from the $(container) storage container
      inputs:
        azureSubscription: '$(azureSubscription)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        arguments: '$(AZURE_STORAGE_ACCOUNT) $(AZURE_STORAGE_KEY) $(container)'
        inlineScript: |
          az storage blob delete-batch --account-name $1 --account-key $2 -s $3

    - task: AzureCLI@2
      displayName: Upload to blob storage
      inputs:
        azureSubscription: '$(azureSubscription)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        arguments: '$(AZURE_STORAGE_ACCOUNT) $(AZURE_STORAGE_KEY) $(container) $(Build.ArtifactStagingDirectory)\app\publish\frontend\wwwroot\'
        inlineScript: |
          az storage blob upload-batch --account-name $1 -s $4 -d '$web' --account-key $2
