@page "/domino"
@inject HttpClient Http
@*@inject IAccessTokenProvider TokenProvider*@
@inject IConfiguration Configuration
@using System.Net.Http
@using System.Net.Http.Headers
@using System.Net.Http.Json
@using System.Text.Json
@using Microsoft.Extensions.Configuration
@*@using Microsoft.AspNetCore.Components.WebAssembly.Authentication*@

<PageTitle>Domino probabilities</PageTitle>

<h1>Probabilities related to domino</h1>

<div class="container">
    <div class="row">
        <div class="col-2">
            <p>
                <label>Number of pieces: @GetCount()</label>
            </p>
            @if (pieces.Length > 0)
            {
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (var piece = 0; piece < pieces.Length / 2; piece++)
                        {
                            <tr>
                                <td>@pieces[piece, 0]</td>
                                <td>@pieces[piece, 1]</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
        <div class="col-2">
            <p>@GetPiece()</p>
        </div>
    </div>
</div>





@code {
    private int count;

    // dimentions [28, 2]
    private int[,] pieces = { { 0, 0 }, { 0, 1 }, { 0, 2 }, { 0, 3 } , { 0, 4 }, { 0, 5 }, { 0, 6 }
                            , { 1, 1 }, { 1, 2 }, { 1, 3 } , { 1, 4 }, { 1, 5 }, { 1, 6 }
                            , { 2, 2 }, { 2, 3 } , { 2, 4 }, {2, 5 }, { 2, 6 }
                            , { 3, 3 }, { 3, 4 }, {3, 5 }, { 3, 6 }
                            , { 4, 4 }, { 4, 5 }, { 4, 6 }
                            , { 5, 5 }, { 5, 6 }
                            , { 6, 6 }
                            };

    private int GetCount() => pieces.Length / 2;

    private int[,] randomPiece = new int[1, 2];

    private List<int> GetPiece()
    {
        List<int> piece = new System.Collections.Generic.List<int>();
        Random r = new Random();
        piece.Add(r.Next(0, 6));
        piece.Add(r.Next(0, 6));

        return piece;
    }


    //there are 28 pieces each one composed of 2 elements

    private async Task GetDomino()
    {
        await Task.Run(() =>
        {
            count = 0;
            for (int left = 0; left < 7; left++)
            {
                for (int right = left; right < 7; right++)
                {
                    pieces[count, 0] = left;
                    pieces[count, 1] = right;
                    count++;
                }
            }
        });
    }
}