@page "/fetchtoss"
@inject HttpClient Http
@*@inject IAccessTokenProvider TokenProvider*@
@using System.Net.Http
@using System.Net.Http.Headers
@using System.Net.Http.Json
@using System.Text.Json
@*@using Microsoft.AspNetCore.Components.WebAssembly.Authentication*@

<PageTitle>Weather forecast</PageTitle>

<h1>Coin tosses</h1>

<div class="input-group mb-3">
      <div class="input-group-prepend">
        <span class="input-group-text"># of groups</span>
      </div>
    <input type="number" class="form-control" placeholder="# of groups" @bind="@groups" />
</div>

<div class="input-group mb-3">
      <div class="input-group-prepend">
        <span class="input-group-text"># of groups</span>
      </div>
    <input type="number" class="form-control" placeholder="# of tosses per group" @bind="@tosses" />
</div>
<div class="input-group mb-3">

    <button @onclick="GetRequest" class="btn btn-primary">Get Data</button>
</div>

@if (coinTosses == null)
{
    if(DataIsRequested)
    {
        <p><em>Loading...</em></p>
    }
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                @for (var col = 1; col <= tosses; col++)
                {
                    <th>@col</th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var group in coinTosses.Data)
            {
                <tr>
                    @foreach(var item in group)
                    {
                        <td>@item</td>
                    }
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private bool DataIsRequested; 
    private int groups = 8;
    private int tosses = 16;
    private string? responseBody;
    private RootObject? coinTosses;

    private class RootObject
    {
        public int NumberOfGroups { get; set; }
        public int TossesPerGroup { get; set; }
        public List<List<string>> Data { get; set; }
    }

    private async Task GetRequest()
    {
        DataIsRequested = true;
        try	
        {
            HttpResponseMessage response = await Http.GetAsync("http://localhost:32747/api/coins");
            response.EnsureSuccessStatusCode();
            responseBody = await response.Content.ReadAsStringAsync();
            coinTosses = await response.Content.ReadFromJsonAsync<RootObject>();

            if(coinTosses != null)
            {
                groups = coinTosses.NumberOfGroups;
                tosses = coinTosses.TossesPerGroup;
            }
            DataIsRequested = false;
        }
        catch(HttpRequestException e)
        {
            Console.WriteLine("\nException Caught!");	
            Console.WriteLine("Message :{0} ",e.Message);
        }
    }


}